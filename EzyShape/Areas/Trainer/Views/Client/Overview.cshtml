@using System.Security.Claims
@{
    @model ClientOverviewViewModel

    @inject IViewLocalizer Localizer


    var weightChange = Model.Stats.WeightChange;
    var weightChangeClass = weightChange > 0
        ? "weight-up-div"
        : weightChange < 0
            ? "weight-down-div"
            : "";
    var icon = weightChange > 0
        ? "<i class='fa-solid fa-arrow-up'></i>"
        : weightChange < 0
            ? "<i class='fa-solid fa-arrow-down'></i>"
            : "<i class='fa-solid fa-minus'></i>";
}

@{
    ViewData["Title"] = $"{Model.Client.FirstName} {Model.Client.LastName} {Localizer["Title"].Value}";
}

<html>

<head>
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/normalize.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/clientOverview.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/Trainer/shareAccesModal.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <style>
        .activity-log-list {
            list-style: none;
            padding: 0;
            margin-top: 10px;
            max-height: 200px;
            overflow-y: auto;
        }

        .activity-log-item {
            padding: 8px 12px;
            border-bottom: 1px solid #ddd;
            display: flex;
            flex-direction: column;
            font-size: 14px;
        }

        .activity-date {
            color: #888;
            font-size: 12px;
        }

        .activity-message {
            font-weight: 500;
            color: #333;
        }

        .no-activity-p {
            padding: 8px 12px;
            color: #999;
            font-style: italic;
        }

    </style>
</head>

<body>

    <div class="div-title">
        <div class="client-item">
            <div class="photo-div" style="background-color:@Model.Client.ColorCode">
                <p class="photo-letter">@Model.Client.FirstName[0]</p>
            </div>
            <p class="client-name-p">
                @($"{Model.Client.FirstName} {Model.Client.LastName}")
            </p>
        </div>
        <div class="buttons-top">
            <button class="button-chat" onclick="window.location.href='@Url.Action("Index", "Chat", new { receiverId = @Model.Client.Id })';">
                <i class="fa-regular fa-message"></i> @Localizer["Chat"]
            </button>

            <button class="button-access">
                <i class="fa-solid fa-user-lock"></i> @Localizer["ShareAccess"]
            </button>
        </div>
    </div>

    <div class="div-navigation">
        <button class="button-nav button-current-page">
            @Localizer["Overview"]
        </button>
        <button class="button-nav"
                onclick="window.location.href='@Url.Action("Training", "Client", new { area = "Trainer", clientId = @Model.Client.Id })';">
            @Localizer["Training"]
        </button>

        <button class="button-nav">
            @Localizer["Gallery"]
        </button>
        <button class="button-nav"
                onclick="window.location.href='@Url.Action("Metrics", "Client", new { area = "Trainer", clientId = @Model.Client.Id })';">
            @Localizer["Metrics"]
        </button>
        <button class="button-nav">
            @Localizer["Settings"]
        </button>
    </div>

    <div class="div-containers">
        <div class="box-container box-shadow">
            <div class="div-container-title">
                <img src="~/img/container-images/container-info.png" alt="@Localizer["ClientInfo"]" width="24" height="24">
                <h5 class="container-container-title-text">@Localizer["ClientInfo"]</h5>
            </div>

            <div class="info-content-div">
                <div class="info-row">
                    <p class="info-label">@Localizer["FirstName"]</p>
                    <p class="info-value">@Model.Client.FirstName</p>
                </div>
                <div class="info-row">
                    <p class="info-label">@Localizer["LastName"]</p>
                    <p class="info-value">@Model.Client.LastName</p>
                </div>
                <div class="info-row">
                    <p class="info-label">@Localizer["Email"]</p>
                    <p class="info-value">@Model.Client.Email</p>
                </div>
                <div class="info-row">
                    <p class="info-label">@Localizer["LastCheckIn"]</p>
                    <div class="last-checking-div">
                        <p>TBA</p>  <!-- You may localize this later if needed -->
                    </div>
                </div>
                <div class="info-row">
                    <p class="info-label">@Localizer["LastActive"]</p>
                    <div class="last-active-div">
                        @{
                            var lastOnline = Model.Client.LastOnline;
                            string lastOnlineText = Localizer["Never"].Value;

                            if (lastOnline.HasValue)
                            {
                                var timeAgo = DateTime.UtcNow - lastOnline.Value;

                                if (timeAgo.TotalMinutes < 60)
                                {
                                    lastOnlineText = string.Format(Localizer["MinutesAgo"].Value, (int)timeAgo.TotalMinutes);
                                }
                                else if (timeAgo.TotalHours < 24)
                                {
                                    lastOnlineText = string.Format(Localizer["HoursAgo"].Value, (int)timeAgo.TotalHours);
                                }
                                else
                                {
                                    lastOnlineText = string.Format(Localizer["DaysAgo"].Value, (int)timeAgo.TotalDays);
                                }
                            }
                        }
                        <p>@lastOnlineText</p>
                    </div>

                </div>
            </div>
        </div>

        <div class="box-container box-shadow">
            <div class="div-container-title">
                <img src="~/img/container-images/container-notes.png" alt="@Localizer["Notes"]" width="24" height="24" />
                <h5 class="container-title-text">@Localizer["Notes"]</h5>
                <button id="btnOpenAddNote" class="button-access" style="margin-left:auto;">@Localizer["Add Note"]</button>
            </div>

            <div class="notes-list" style="margin-top:10px; overflow-y:auto; max-height:220px;">
                @if (Model.TrainerNotes != null && Model.TrainerNotes.Any())
                {
                    foreach (var note in Model.TrainerNotes)
                    {
                        <div class="note-item" style="border-bottom: 1px solid #eee; padding: 10px 5px;">
                            <h6>@note.Title</h6>
                            <p>@note.Content</p>
                            <small class="text-muted">@note.CreatedAt.ToLocalTime().ToString("dd MMM yyyy HH:mm")</small>
                        </div>
                    }
                }
                else
                {
                    <p class="no-photos-p" style="text-align:center; margin-top: 40px;">@Localizer["No notes available."]</p>
                }
            </div>
        </div>

        <div class="box-container box-shadow">
            <div class="div-container-title">
                <img src="~/img/container-images/container-activity.png" alt="@Localizer["ActivityHistory"]" width="24" height="24">
                <h5 class="container-title-text">@Localizer["ActivityHistory"]</h5>
            </div>

            @if (Model.ActivityLogs != null && Model.ActivityLogs.Any())
            {
                <ul class="activity-log-list">
                    @foreach (var log in Model.ActivityLogs.Take(5))
                    {
                        <li class="activity-log-item">
                            <span class="activity-date">@log.CreatedOn.ToLocalTime().ToString("dd MMM yyyy HH:mm")</span>
                            <span class="activity-message">@log.Description</span>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p class="no-activity-p">@Localizer["NoActivityLogs"]</p>
            }
        </div>

        <div class="box-container box-shadow">
            <div class="div-container-title">
                <img src="~/img/container-images/container-data.png" alt="@Localizer["WeightGraph"]" width="24" height="24">
                <h5 class="container-title-text">@Localizer["WeightGraph"]</h5>
            </div>
            <div style="height: 250px;">
                <canvas id="weightChart"></canvas>
            </div>
        </div>

        <div class="box-container box-shadow">
            <div class="div-container-title">
                <img src="~/img/container-images/container-data.png" alt="@Localizer["ClientData"]" width="24" height="24">
                <h5 class="container-title-text">@Localizer["ClientData"]</h5>
            </div>
            <div class="client-data-body">
                @if (Model.Stats == null || Model.Stats.StartWeight == 0 || Model.Stats.CurrentWeight == 0)
                {
                    <p><strong>@Localizer["NotEnoughData"]</strong></p>
                }
                else
                {
                    <p><strong>@Localizer["StartWeight"]</strong> @Model.Stats.StartWeight kg</p>
                    <p><strong>@Localizer["CurrentWeight"]</strong> @Model.Stats.CurrentWeight kg</p>

                    <p>
                        <strong>@Localizer["Change"]</strong>
                        <span class="@weightChangeClass" style="padding: 4px 8px;">
                            @Html.Raw(icon) @weightChange.ToString("+#.##;-#.##;0") kg
                        </span>
                    </p>

                    <p><strong>@Localizer["Tracked"]</strong> @Model.Stats.MonthsTracked month(s)</p>
                    <p><strong>@Localizer["AvgChangePerMonth"]</strong> @Model.Stats.AverageMonthlyChange.ToString("+#.##;-#.##;0") kg</p>
                    <p><strong>@Localizer["Trend"]</strong> @Model.Stats.TrendDescription</p>
                }
            </div>
        </div>

        <div class="box-container photos-container box-shadow">
            <div class="div-container-title">
                <img src="~/img/container-images/container-photos.png" alt="@Localizer["RecentPhotos"]" width="24" height="24">
                <h5 class="container-title-text">@Localizer["RecentPhotos"]</h5>
            </div>

            @if (Model.Photos.Any())
            {
                <div class="gallery-content-div">
                    @foreach (var photo in Model.Photos)
                    {
                        <img src="@Url.Content("~/images/" + photo.FileName)" alt="@Localizer["RecentPhotos"]" class="gallery-photo" />
                    }
                </div>
            }
            else
            {
                <p class="no-photos-p">@Localizer["NoPhotos"]</p>
            }
        </div>

    </div>

    <div id="accessModal" class="modal-overlay" style="display:none;">
        <div class="modal-content">
            <span class="close-button" onclick="closeModal()">&times;</span>
            <h3>Access Credentials</h3>
            <p><strong>Username:</strong> @Model.Client.Username</p>
            <p><strong>Password:</strong> @($"{Model.Client.FirstName}{Model.Client.LastName}123")</p>

        </div>
    </div>


    <!-- Modal markup -->
    <div id="addNoteModal" class="modal" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%;
    background-color: rgba(0,0,0,0.5); justify-content:center; align-items:center;">
        <div class="modal-content" style="background:#fff; border-radius:12px; padding:20px; width: 400px; position:relative;">
            <h4>@Localizer["Add New Note"]</h4>
            <form id="addNoteForm" method="post" asp-action="AddNote" asp-controller="Note" asp-area="Trainer">
                <input type="hidden" name="clientId" value="@Model.Client.Id" />
                <input type="hidden" name="trainerId" value="@User.FindFirstValue(ClaimTypes.NameIdentifier)" />

                <div class="form-group" style="margin-bottom:10px;">
                    <label for="Title">@Localizer["Title"]</label>
                    <input type="text" id="Title" name="Title" class="form-control" maxlength="100" required />
                </div>

                <div class="form-group" style="margin-bottom:10px;">
                    <label for="Content">@Localizer["Content"]</label>
                    <textarea id="Content" name="Content" class="form-control" rows="4" required></textarea>
                </div>

                <div style="display:flex; justify-content:flex-end; gap:10px;">
                    <button type="button" id="btnCancelNote" class="button-access">@Localizer["Cancel"]</button>
                    <button type="submit" class="button-chat">@Localizer["Save"]</button>
                </div>
            </form>
        </div>
    </div>


    <script>
        document.getElementById('btnOpenAddNote').addEventListener('click', function () {
            document.getElementById('addNoteModal').style.display = 'flex';
        });
        document.getElementById('btnCancelNote').addEventListener('click', function () {
            document.getElementById('addNoteModal').style.display = 'none';
        });

        // Optional: submit the form with AJAX to stay on page and update list dynamically
        // but that can be added later if you want
    </script>
    
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="~/js/Trainer/shareAccessModal.js"></script>

    <script>
        const weightLabels = [
        @foreach (var log in Model.WeightLogs)
        {
            @Html.Raw("\"" + log.LogDate.ToString("MM/dd/yyyy") + "\",")
        }
        ];

        const weightData = [
        @foreach (var log in Model.WeightLogs)
        {
            @Html.Raw(log.Weight + ",")
        }
        ];

        const ctx = document.getElementById('weightChart').getContext('2d');
        const weightChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: weightLabels,
                datasets: [{
                    // label: 'Weight Over Time', // <== REMOVE THIS
                    data: weightData,
                    borderColor: '#2051f1',
                    backgroundColor: 'rgba(32, 81, 241, 0.1)',
                    fill: true,
                    tension: 0.4,
                    pointRadius: 5,
                    pointBackgroundColor: '#2051f1'
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false // <== HIDE THE LEGEND COMPLETELY
                    }
                },
                scales: {
                    y: {
                        beginAtZero: false
                    }
                }
            }
        });
    </script>
</body>

</html>
